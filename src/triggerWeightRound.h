#include <array>
#include<algorithm>

float trigWeight(double HT, double pt, int nB){
    array<float, 10>  pt40;
    array<float, 10>  pt45;
    array<float, 10>  pt50;
    array<float, 10>  pt55;
    array<float, 10>  pt60;
    array<float, 10>  pt70;
    array<float, 10>  pt120;
    // Scale factors
    if (nB <= 1){
      pt40 = {0.81, 0.929, 0.878, 0.953, 0.802, 0.907, 0.828, 0.957, 1.0, 1.0};
      pt45 = {0.883, 0.987, 0.873, 1.068, 0.93, 0.894, 0.989, 0.927, 1.0, 1.0};
      pt50 = {0.772, 0.914, 0.922, 0.951, 0.905, 0.932, 0.875, 0.923, 1.0, 1.0};
      pt55 = {0.8, 0.99, 0.836, 0.971, 0.893, 0.982, 1.031, 0.943, 1.0, 1.0};
      pt60 = {1.0, 0.727, 0.864, 1.053, 0.871, 0.937, 0.962, 1.005, 1.0, 1.0};
      pt70 = {1.0, 1.0, 1.0, 1.0, 0.976, 0.844, 0.993, 0.992, 1.016, 1.0};
      pt120 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.067, 1.0};
    }
    else if (nB == 2){
      pt40 = {0.952, 0.963, 0.958, 0.963, 0.953, 0.97, 0.929, 0.948, 0.985, 1.0};
      pt45 = {0.961, 0.964, 0.97, 0.98, 0.999, 0.971, 0.964, 0.958, 1.0, 1.0};
      pt50 = {0.935, 0.997, 1.0, 0.989, 0.978, 0.997, 0.998, 0.97, 1.0, 1.0};
      pt55 = {0.974, 0.99, 0.995, 1.011, 0.98, 0.975, 0.98, 0.979, 1.0, 1.0};
      pt60 = {0.948, 0.984, 0.965, 0.999, 0.995, 0.988, 0.991, 0.98, 1.0, 1.0};
      pt70 = {1.0, 1.034, 0.988, 0.986, 0.956, 0.987, 0.993, 0.989, 0.995, 1.0};
      pt120 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.007, 1.0, 1.0};
     }
    else if (nB == 3){
      pt40 = {0.972, 0.931, 1.024, 0.992, 0.979, 0.976, 0.988, 1.01, 1.0, 1.0};
      pt45 = {0.992, 0.986, 0.984, 0.988, 0.991, 0.993, 1.007, 0.99, 1.0, 1.0};
      pt50 = {0.988, 1.015, 1.005, 0.995, 0.991, 1.01, 1.014, 0.975, 1.0, 1.0};
      pt55 = {0.945, 0.982, 0.963, 0.987, 1.0, 0.977, 0.985, 1.008, 1.0, 1.0};
      pt60 = {1.0, 1.0, 0.995, 0.974, 0.995, 0.988, 0.983, 0.966, 1.0, 1.0};
      pt70 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.016, 1.005, 0.982, 0.977, 1.0};
      pt120 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
     }
    else if (nB >= 4){
      pt40 = {0.916, 0.949, 1.041, 1.0, 1.0, 0.964, 1.0, 1.0, 1.0, 1.0};
      pt45 = {0.923, 1.0, 1.0, 1.034, 1.0, 0.95, 0.944, 0.833, 1.0, 1.0};
      pt50 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
      pt55 = {1.0, 1.0, 1.0, 1.0, 1.0, 0.909, 1.0, 1.0, 1.0, 1.0};
      pt60 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
      pt70 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.011, 1.0, 1.0};
      pt120 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
     }
    /* //Errors */
    /* std::array<float, 10>  pt40err; */
    /* std::array<float, 10>  pt45err; */
    /* std::array<float, 10>  pt50err; */
    /* std::array<float, 10>  pt55err; */
    /* std::array<float, 10>  pt60err; */
    /* std::array<float, 10>  pt70err; */
    /* std::array<float, 10>  pt120err; */
    /* if (nB <= 1){ */
    /*      pt40err = {0.0555	,	0.0625	,	0.0565	,	0.0608	,	0.0693	,	0.0639	,	0.0591	,	0.0434	,	0.0000	,	0.000}; */
    /*      pt45err = {0.0731	,	0.0561	,	0.0549	,	0.0614	,	0.0541	,	0.0568	,	0.0547	,	0.0476	,	0.0000	,	0.000}; */
    /*      pt50err = {0.0991	,	0.0623	,	0.0605	,	0.0649	,	0.0643	,	0.0463	,	0.0509	,	0.0480	,	0.0000	,	0.000}; */
    /*      pt55err = {0.1176	,	0.0861	,	0.0874	,	0.0799	,	0.0741	,	0.0620	,	0.0333	,	0.0493	,	0.0000	,	0.000}; */
    /*      pt60err = {0.1000	,	0.1216	,	0.0887	,	0.1212	,	0.0602	,	0.0550	,	0.0355	,	0.0303	,	0.0000	,	0.000}; */
    /*      pt70err = {0.0000	,	0.1000	,	0.1000	,	0.1000	,	0.0801	,	0.0816	,	0.0341	,	0.0232	,	0.0163	,	0.000}; */
    /*     pt120err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0689	,	0.000}; */
    /*  } */
    /* if (nB == 2){ */
    /*      pt40err = {0.0105	,	0.0099	,	0.0101	,	0.0117	,	0.0133	,	0.0107	,	0.0128	,	0.0139	,	0.0304	,	0.0000}; */
    /*      pt45err = {0.0113	,	0.0102	,	0.0093	,	0.0102	,	0.0099	,	0.0091	,	0.0107	,	0.0129	,	0.0000	,	0.0000}; */
    /*      pt50err = {0.0169	,	0.0107	,	0.0076	,	0.0093	,	0.0125	,	0.0082	,	0.0077	,	0.0122	,	0.0000	,	0.0000}; */
    /*      pt55err = {0.0223	,	0.0145	,	0.0089	,	0.0108	,	0.0126	,	0.0096	,	0.0091	,	0.0110	,	0.0000	,	0.0000}; */
    /*      pt60err = {0.0494	,	0.0205	,	0.0178	,	0.0106	,	0.0107	,	0.0073	,	0.0064	,	0.0081	,	0.0000	,	0.0000}; */
    /*      pt70err = {0.0500	,	0.0351	,	0.0311	,	0.0227	,	0.0226	,	0.0105	,	0.0052	,	0.0055	,	0.0078	,	0.0000}; */
    /*     pt120err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0067	,	0.0000	,	0.0000}; */
    /* } */
    /* if (nB == 3){ */
    /*      pt40err = {0.0199	,	0.0239	,	0.0137	,	0.0173	,	0.0191	,	0.0190	,	0.0178	,	0.0268	,	0.0000	,	0.0000}; */
    /*      pt45err = {0.0204	,	0.0176	,	0.0137	,	0.0186	,	0.0168	,	0.0191	,	0.0047	,	0.0190	,	0.0000	,	0.0000}; */
    /*      pt50err = {0.0374	,	0.0089	,	0.0048	,	0.0156	,	0.0162	,	0.0125	,	0.0070	,	0.0224	,	0.0000	,	0.0000}; */
    /*      pt55err = {0.0522	,	0.0283	,	0.0257	,	0.0203	,	0.0000	,	0.0201	,	0.0172	,	0.0079	,	0.0000	,	0.0000}; */
    /*      pt60err = {0.0000	,	0.0000	,	0.0305	,	0.0253	,	0.0224	,	0.0140	,	0.0131	,	0.0193	,	0.0000	,	0.0000}; */
    /*      pt70err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0093	,	0.0035	,	0.0103	,	0.0230	,	0.0000}; */
    /*     pt120err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /* } */
    /* if (nB >= 4){ */
    /*      pt40err = {0.0700	,	0.0491	,	0.0294	,	0.0000	,	0.0000	,	0.0351	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /*      pt45err = {0.0739	,	0.0000	,	0.0000	,	0.0351	,	0.0000	,	0.0487	,	0.0540	,	0.1521	,	0.0000	,	0.0000}; */
    /*      pt50err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /*      pt55err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0867	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /*      pt60err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /*      pt70err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0110	,	0.0000	,	0.0000}; */
    /*     pt120err = {0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000	,	0.0000}; */
    /* } */

    std::array<float, 7> ptbins = { 40.0, 45.0, 50.0, 55.0, 60.0, 70.0, 120.0 };
    std::array<float, 10> HTbins = { 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 800.0, 1000.0, 1500.0, 2000.0};

    int hBin = -1;
    for (auto& HTbin: HTbins){
      if (HT < HTbin) { break; }
      else { hBin++; }
    }

    int pbin = -1;
    for (auto& ptbin: ptbins){
      if (pt < ptbin) { break;}
      else { pbin++; }
    }

    if (pbin < 0){ pbin = 0; }
    if (hBin < 0){ hBin = 0; }

    float SF = 1;
    float SFerr = 1;

    switch(pbin) {
      case 0: SF = pt40[hBin];
	//SFerr = pt40err[hBin];
              break;
      case 1: SF = pt45[hBin];
	//SFerr = pt45err[hBin];
              break;
      case 2: SF = pt50[hBin];
	//SFerr = pt50err[hBin];
              break;
      case 3: SF = pt55[hBin];
	//SFerr = pt55err[hBin];
              break;
      case 4: SF = pt60[hBin];
	//SFerr = pt60err[hBin];
              break;
      case 5: SF = pt70[hBin];
	//SFerr = pt70err[hBin];
              break;
      case 6: SF = pt120[hBin];
	//SFerr = pt120err[hBin];
              break;
    }

    //ScaleFactorerror = SFerr;
    return SF;
}
